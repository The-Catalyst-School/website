@use 'sass:math';
@import 'variables';

@mixin disable-scrollbar {
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none;
  scrollbar-width: none;
}

$max-width: 1280px;

@mixin pagewidth {
  width: 100%;
  padding: 0 40px;
  max-width: $max-width;
  margin: 0px auto;
  @include mobile-tablet {
    padding: 0 20px;
  }
}

$base-font-size: 1440;
$base-measure-size: 1440;
$max-font-size: 1920;
$base-measure-size: 1440;

@mixin transition($property, $time: 0.3s) {
  transition: all ease-in-out #{$time};
  transition-property: #{$property};
}

@mixin m-font-size($size, $line-height, $weight: 300) {
  $font-size: math.div(($size * 100), $base-font-size);
  $l-height: math.div(($line-height * 100), $base-font-size);
  font-size: $font-size * 1vw;
  line-height: ($l-height * 1vw);
  font-weight: $weight;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @include big-desktop {
    font-size: $font-size * (($max-font-size * 1px) / 100);
    line-height: $l-height * (($max-font-size * 1px) / 100);
  }
}

@mixin font-size($size, $line-height, $weight: 300) {
  font-weight: $weight;
  font-size: $size * 1px;
  line-height: $line-height * 1px;
}

@mixin col($args, $gutter: $default-gutter) {
  width: (math.div(100%, nth($args, 3)) * nth($args, 1));
  @include r('padding-left', math.div($gutter, 2));
  @include r('padding-right', math.div($gutter, 2));
  @include mobile-tablet {
    padding-left: math.div($gutter, 2);
    padding-right: math.div($gutter, 2);
  }
}

@mixin col-vw($args) {
  width: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  @include r('padding-left', 7);
  @include r('padding-right', 7);
  @include tablet {
    width: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
    padding-left: 10px;
    padding-right: 10px;
  }
  @include mobile {
    width: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
    padding-left: 10px;
    padding-right: 10px;
  }
}

@mixin col-after($args) {
  margin-right: (math.div(100%, nth($args, 3)) * nth($args, 1));
  @include tablet {
    margin-right: (math.div(100%, nth($args, 3)) * nth($args, 1));
  }
  @include mobile {
    margin-right: (math.div(100%, nth($args, 3)) * nth($args, 1));
  }
}
@mixin col-before($args) {
  margin-left: (math.div(100%, nth($args, 3)) * nth($args, 1));
  @include tablet {
    margin-left: (math.div(100%, nth($args, 3)) * nth($args, 1));
  }
  @include mobile {
    margin-left: (math.div(100%, nth($args, 3)) * nth($args, 1));
  }
}
@mixin col-vw-after($args) {
  margin-right: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  @include tablet {
    margin-right: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  }
  @include mobile {
    margin-right: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  }
}
@mixin col-vw-before($args) {
  margin-left: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  @include tablet {
    margin-left: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  }
  @include mobile {
    margin-left: (math.div(100, nth($args, 3)) * nth($args, 1)) * 1vw;
  }
}

@mixin default-spacing {
  @include r('padding', math.div($default-gutter, 2));
}

$big-desktop: "(min-width: 1921px)";
@mixin big-desktop {
  @media #{$big-desktop} {
    @content;
  }
}

$tablet: "(min-width: 768px) and (max-width: 1024px)";
@mixin tablet {
  @media #{$tablet} {
    @content;
  }
}

$mobile: "(max-width: 767px)";
@mixin mobile {
  @media #{$mobile} {
    @content;
  }
}

$small-mobile: "(max-width: 480px)";
@mixin small-mobile {
  @media #{$small-mobile} {
    @content;
  }
}

$mobile-tablet: "(max-width: 1024px)";
@mixin mobile-tablet {
  @media #{$mobile-tablet} {
    @content;
  }
}

$desk: "(min-width: 1025px)";
@mixin desk {
  @media #{$desk} {
    @content;
  }
}

$small-desktop: "(min-width: 1024px) and (max-width: 1440px)";
@mixin small-desktop {
  @media #{$small-desktop} {
    @content;
  }
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }
  @return $number;
}

@mixin r($property, $sizes, $important: '') {
  $val: '';
  $mval: '';
  @each $size in $sizes {
    $val: #{$val relative-size($size)} #{$important};
    $mval: #{$mval relative-max-size($size)} #{$important};
  }
  #{$property}: $val;
  @include mobile-tablet {
    $val: '';
    @each $size in $sizes {
      $val: #{$val} #{$size} #{$important};
    }
    #{$property}: $val;
  }
}

@mixin column-before($percentage) {
  $single: nth($percentage, 1);
  $full: nth($percentage, 3);

  margin-left: percentage(math.div($single, $full));
}

@mixin column-after($percentage) {
  $single: nth($percentage, 1);
  $full: nth($percentage, 3);

  margin-right: percentage(math.div($single, $full));
}

@function relative-size($size) {
  $rsize: math.div((strip-unit($size) * 100), $base-measure-size);
  @return $rsize * 1vw;
}

@function relative-max-size($size) {
  $rsize: math.div((strip-unit($size) * 100), $base-measure-size);
  @return $rsize * math.div(($base-measure-size * 1px), 100);
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
